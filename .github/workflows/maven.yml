# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  # Developement/Build stage (not actually building here, this is a preliminary stage to not cache dependencies)
  build_clean:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 18
        uses: actions/setup-java@v3
        with:
          java-version: '18'
          distribution: 'temurin'
          cache: maven
      - name: Build with Maven
        run: mvn clean --file pom.xml

  # Building -> Testing stage (when you do maven test, it builds the code base to be tested on)
  build_test:

    runs-on: ubuntu-latest
    needs: build_clean
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 18
        uses: actions/setup-java@v3
        with:
          java-version: '18'
          distribution: 'temurin'
          cache: maven
      - name: Build with Maven
        run: mvn test --file pom.xml

  build_package:

    runs-on: ubuntu-latest
    needs: build_test
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '18'
          distribution: 'temurin'
          cache: maven
      - name: Build with Maven
        run: mvn -B package --file pom.xml

  # Deployment stage (this is the final stage where the code is deployed to Docker Image)
  publish-job:
    runs-on: ubuntu-latest
    needs: build_package
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          java-version: '18'
          distribution: 'temurin'
      - run: mvn --batch-mode --update-snapshots verify
      - run: mkdir staging && cp target/*.jar staging
      - uses: actions/upload-artifact@v3
        with:
          name: Package
          path: staging

      - name: Git checkout
        uses: actions/checkout@v4

#
      - name: Build and Push Docker Image
        uses: mr-smithers-excellent/docker-build-push@v3
        with:
          image: siddharthsakriya/softwaretestingsid
          registry: docker.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
